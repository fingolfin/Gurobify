@Chapter Introduction
	@Section What is Gurobify?

	<Cite Key="GAP4"/>
	<Cite Key="gurobi"/>
	<Cite Key="autodoc"/>
	<Cite Key="packagemaker"/>

Gurobify is a GAP package which provides an interface to the optimisation software Gurobi.


	@Section Prerequisites

Gurobi requires the following software to be installed.

* GAP 4.8 (or later)

* Gurobi 7.0

* Autotools

Autotools may be installed on MacOSC using homebrew with the commands **brew install autoconf** and **brew install automake**.
If you want to regenerate the documentation for any reason, then the following will also be required.

* AutoDoc 2016.03.08 (or later)

* GAPDoc 1.5 (or later)

Although Gurobi is proprietary software, it is available free for academic use. According to the Gurobi website, 
$$ $$
"Gurobi makes most of our solvers available to recognized degree-granting academic institutions free of charge" <Cite Key="gurobiLicence2"/>,
$$ $$ and
$$ $$
"The free Academic License for Gurobi has all the features and performance of the full Gurobi Optimizer. A free Academic License  has no limits on model  size. The only  restrictions on the use of these licenses  are:

* They can only be used by faculty, students, or staff of a degree-granting academic institution

* They can only be used for research or educational purposes

* They must be validated from a recognized academic domain, as described below.

Note, free academic licenses expire twelve (12) months after the date on which your license was generated, but eligible faculty, students, or staff can renew a license by repeating the above process" <Cite Key="gurobiLicence1"/>.
$$ $$
For up to date information on Gurobi licences, please refer to the Gurobi website. A link can be found in the Appendix, or through a simple search online.





	@Section Installation

To install Gurobify, first unpack it in the pkg directory of the GAP installation directory. You may place Gurobify in a different location, so long as its parent directory is called "pkg". Installing Gurobify outside of the GAP root pkg directory is not recommended, but is useful for example when administrative privelages are needed to access the GAP root directory. Next run the following commands in the terminal from within the Gurobify directory.

@BeginLog
#! ./autogen.sh
#! ./congigure --with-gurobi=<gurobi path> [--with-gaproot=<gap path>]
#! make
@EndLog

The &#8208;-with-gurobi=&lt;gurobi path&gt; is a necessary argument, and normally looks something like this on MacOSX,
$$ $$
&#8208;-with-gurobi=/Library/gurobi701/mac64
$$ $$
or something like this on Linux,
$$ $$
&#8208;-with-gurobi=/opt/gurobi701/linux64
$$ $$
The [&#8208;-with-gaproot=&lt;gap path&gt;] is an optional argument, and is not normally necessary if Gurobify is placed in the pkg directory of the GAP root directory. If, however, Gurobify is located in a non-root pkg directory, then this argument must be included. It normally looks something like this,
$$ $$
&#8208;-with-gaproot=/opt/gap4r8/
$$ $$


	@Section Documentation

Within the Gurobify directory there is a subdirectory called doc. This directory contains the documentaion for Gurobify in the form of a pdf file called "manual.pdf" as well as in html form. To access the html version of the manual, open the file called "chap0.html". The documentation can be regenerated by running the following command in the terminal from the Gurobify directory, though this should not be necessary.

@BeginLog
#! gap.sh makedoc.g
@EndLog

	
	@Section Loading Gurobify

Open GAP and load Gurobify with the command **LoadPackage("Gurobify");**. You should see something like the following.

@BeginExample
 LoadPackage("Gurobify");
#! -----------------------------------------------------------------------------
#! Loading  Gurobify 1.0 (Gurobify provides an interface to Gurobi from GAP.)
#! by Jesse Lansdown (www.jesselansdown.com).
#! Homepage: https://github.com/jesselansdown/Gurobify/
#! -----------------------------------------------------------------------------
#! true
@EndExample

Note that if you have Gurobify located somewhere other than the GAP root directory's pkg directory, then you must run GAP with the following command to enable GAP to find Gurobify.

@BeginLog
#! gap.sh -l ";/alternative/path/to/Gurobify"
@EndLog

where **/alternative/path/to/Gurobify** is the path to the directory which contains **/pkg/Gurobify** as subdirectories.


@Chapter Getting Started
	@Section Getting Started

TODO

	@Section Minimal working example?

TODO

@Chapter Using Gurobify
	@Section Creating or reading a model

	TODO intro to section

	@Section Adding and deleting constraints

	TODO

	@Section Optimizing a model

	TODO
	@Section Querying attributes and parameters

	TODO

	@Section Querying other attributes and parameters

	In addition to these specific queries given in the previous section, all other gurobi parameters and attributes which take integer or double values can be queried using GurobiGetIntegerParameter("ParameterName"), GurobiGetDoubleParameter("ParameterName"), GurobiGetIntegerAttribute("AttributeName") or GurobiGetDoubleAttribute("AttributeName") respectively, where "ParameterName" and "AttributeName" are strings given exactly as in the Gurobi documentation. See the Appendix for links to the relevant documentation.

	@Section Modifying attributes and parameters

	TODO

	@Section Modifying other attributes and parameters

	@Chapter Using Gurobify
		@Section Other

@Chapter Gurobify Functions

@Chapter Examples
	@Section Examples

TODO

@Chapter Appendix
	@Section Links to some Gurobi documentation

For more information on Gurobi parameters, attributes, and status codes, see the following links:

* Attributes: http://www.gurobi.com/documentation/7.0/refman/attributes.html

* Parameters: http://www.gurobi.com/documentation/7.0/refman/parameters.html

* Status codes: https://www.gurobi.com/documentation/7.0/refman/optimization_status_codes.html

* Licencing: http://www.gurobi.com/products/licensing-pricing/licensing-overview